// <auto-generated />
using System;
using Life.ApiPharm;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Life.ApiPharm.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240414175355_UpdateDb5")]
    partial class UpdateDb5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Life.ApiPharm.AtgItemDb", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("GrlsId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("GrlsId");

                    b.ToTable("AtgItems");
                });

            modelBuilder.Entity("Life.ApiPharm.GRLS", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("CancelDate")
                        .HasColumnType("text");

                    b.Property<string>("CertNum")
                        .HasColumnType("text");

                    b.Property<string>("CirculationPeriod")
                        .HasColumnType("text");

                    b.Property<string>("ExpDate")
                        .HasColumnType("text");

                    b.Property<string>("HolderCountry")
                        .HasColumnType("text");

                    b.Property<string>("HolderName")
                        .HasColumnType("text");

                    b.Property<string>("Inn")
                        .HasColumnType("text");

                    b.Property<bool?>("IsFs")
                        .HasColumnType("boolean");

                    b.Property<string>("IsInterchangeable")
                        .HasColumnType("text");

                    b.Property<string>("IsLifeImportant")
                        .HasColumnType("text");

                    b.Property<string>("IsNarcotic")
                        .HasColumnType("text");

                    b.Property<string>("OrphanDate")
                        .HasColumnType("text");

                    b.Property<string>("RegDate")
                        .HasColumnType("text");

                    b.Property<string>("RenewDate")
                        .HasColumnType("text");

                    b.Property<string>("TradeName")
                        .HasColumnType("text");

                    b.Property<string>("id_grls")
                        .HasColumnType("text");

                    b.Property<string>("ptg")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("GRLS");
                });

            modelBuilder.Entity("Life.ApiPharm.InstructionDb", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<int>("GrlsId")
                        .HasColumnType("integer");

                    b.Property<int?>("IdReg")
                        .HasColumnType("integer");

                    b.Property<string>("InstructionFolderPath")
                        .HasColumnType("text");

                    b.Property<string>("InstructionLabel")
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.Property<int?>("Section")
                        .HasColumnType("integer");

                    b.Property<string>("SourceName")
                        .HasColumnType("text");

                    b.Property<string>("SourceUrl")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("GrlsId");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("Life.ApiPharm.ManufacturingFormDb", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Dose")
                        .HasColumnType("text");

                    b.Property<string>("Form")
                        .HasColumnType("text");

                    b.Property<int>("GrlsId")
                        .HasColumnType("integer");

                    b.Property<string>("Packs")
                        .HasColumnType("text");

                    b.Property<string>("ShelfLife")
                        .HasColumnType("text");

                    b.Property<string>("StorageConditions")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("GrlsId");

                    b.ToTable("ManufacturingForms");
                });

            modelBuilder.Entity("Life.ApiPharm.ManufacturingInfoDb", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<int>("GrlsId")
                        .HasColumnType("integer");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<string>("Stage")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("GrlsId");

                    b.ToTable("ManufacturingInfos");
                });

            modelBuilder.Entity("Life.ApiPharm.NormativeDocDb", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("ChangeNumber")
                        .HasColumnType("text");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text");

                    b.Property<int>("GrlsId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Year")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("GrlsId");

                    b.ToTable("NormativeDocs");
                });

            modelBuilder.Entity("Life.ApiPharm.Pack", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("ManufacturingFormId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("ManufacturingFormId");

                    b.ToTable("Packs");
                });

            modelBuilder.Entity("Life.ApiPharm.PharmaceuticalSubstanceDb", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("CertNum")
                        .HasColumnType("text");

                    b.Property<string>("DrugsPresence")
                        .HasColumnType("text");

                    b.Property<int>("GrlsId")
                        .HasColumnType("integer");

                    b.Property<string>("Inn")
                        .HasColumnType("text");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("ShelfLife")
                        .HasColumnType("text");

                    b.Property<string>("StorageConditions")
                        .HasColumnType("text");

                    b.Property<string>("TradeName")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("GrlsId");

                    b.ToTable("PharmaceuticalSubstances");
                });

            modelBuilder.Entity("Life.ApiPharm.AtgItemDb", b =>
                {
                    b.HasOne("Life.ApiPharm.GRLS", "Grls")
                        .WithMany()
                        .HasForeignKey("GrlsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grls");
                });

            modelBuilder.Entity("Life.ApiPharm.InstructionDb", b =>
                {
                    b.HasOne("Life.ApiPharm.GRLS", "Grls")
                        .WithMany()
                        .HasForeignKey("GrlsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grls");
                });

            modelBuilder.Entity("Life.ApiPharm.ManufacturingFormDb", b =>
                {
                    b.HasOne("Life.ApiPharm.GRLS", "Grls")
                        .WithMany()
                        .HasForeignKey("GrlsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grls");
                });

            modelBuilder.Entity("Life.ApiPharm.ManufacturingInfoDb", b =>
                {
                    b.HasOne("Life.ApiPharm.GRLS", "Grls")
                        .WithMany()
                        .HasForeignKey("GrlsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grls");
                });

            modelBuilder.Entity("Life.ApiPharm.NormativeDocDb", b =>
                {
                    b.HasOne("Life.ApiPharm.GRLS", "Grls")
                        .WithMany()
                        .HasForeignKey("GrlsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grls");
                });

            modelBuilder.Entity("Life.ApiPharm.Pack", b =>
                {
                    b.HasOne("Life.ApiPharm.ManufacturingFormDb", "ManufacturingForm")
                        .WithMany()
                        .HasForeignKey("ManufacturingFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManufacturingForm");
                });

            modelBuilder.Entity("Life.ApiPharm.PharmaceuticalSubstanceDb", b =>
                {
                    b.HasOne("Life.ApiPharm.GRLS", "Grls")
                        .WithMany()
                        .HasForeignKey("GrlsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grls");
                });
#pragma warning restore 612, 618
        }
    }
}
